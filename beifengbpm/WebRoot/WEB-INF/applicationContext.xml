<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation=" 
          http://www.springframework.org/schema/beans 
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
          http://www.springframework.org/schema/tx 
          http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
          http://www.springframework.org/schema/context 
          http://www.springframework.org/schema/context/spring-context-3.0.xsd 
          http://www.springframework.org/schema/aop 
          http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-autowire="byName">
	<!-- 注意上面的default-autowire="byName"，如果没有这个声明那么HibernateDaoSupport中的sessionFactory不会被注入 -->
	<!-- 约定优于配置，约定优于配置 -->
	<!-- 引用文件 -->
	<context:property-placeholder location="WEB-INF/classes/jdbc.properties" />

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>${c3p0.driverClass}</value>
		</property>
		<property name="jdbcUrl">
			<value>${c3p0.jdbcUrl}</value>
		</property>
		<property name="user">
			<value>${c3p0.user}</value>
		</property>
		<property name="password">
			<value>${c3p0.password}</value>
		</property>

		<!--连接池中保留的最小连接数。 -->
		<property name="minPoolSize">
			<value>${c3p0.minPoolSize}</value>
		</property>

		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize">
			<value>${c3p0.maxPoolSize}</value>
		</property>

		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize">
			<value>${c3p0.initialPoolSize}</value>
		</property>

		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime">
			<value>${c3p0.maxIdleTime}</value>
		</property>

		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement">
			<value>${c3p0.acquireIncrement}</value>
		</property>

		<!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements 属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。 
			如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
		<property name="maxStatements">
			<value>${c3p0.maxStatements}</value>
		</property>


		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod">
			<value>${c3p0.idleConnectionTestPeriod}</value>
		</property>

		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts">
			<value>${c3p0.acquireRetryAttempts}</value>
		</property>

		<!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试 
			获取连接失败后该数据源将申明已断开并永久关闭。Default: false -->
		<property name="breakAfterAcquireFailure">
			<value>${c3p0.breakAfterAcquireFailure}</value>
		</property>

		<!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的 时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable 
			等方法来提升连接测试的性能。Default: false -->
		<property name="testConnectionOnCheckout">
			<value>${c3p0.testConnectionOnCheckout}</value>
		</property>
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.beifengbpm.entity.Department</value>
				<value>com.beifengbpm.entity.FlowUser</value>
				<value>com.beifengbpm.entity.FlowRole</value>
				<value>com.beifengbpm.api.entity.FlowModel</value>
				<value>com.beifengbpm.api.entity.WorkItem</value>
				<value>com.beifengbpm.api.entity.ProcessIns</value>
				<value>com.beifengbpm.api.entity.TodoTable</value>
				<value>com.beifengbpm.api.entity.HaveTodoTable</value>
				<value>com.beifengbpm.api.entity.WorkitemState</value>
				<value>com.beifengbpm.business.entity.Leave</value>
				<value>com.beifengbpm.business.entity.Approvation</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.query.factory_class">
					org.hibernate.hql.classic.ClassicQueryTranslatorFactory
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.query.substitutions">
					true 'T', false 'F'
				</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>

	<bean id="commonDao" class="com.beifengbpm.dao.impl.CommonDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<bean id="departmentService" class="com.beifengbpm.service.impl.DepartmentServiceImpl">
		<property name="commonDao" ref="commonDao"></property>
	</bean>
	<bean id="flowuserService" class="com.beifengbpm.service.impl.FlowUserServiceImpl">
		<property name="commonDao" ref="commonDao"></property>
	</bean>
	<bean id="flowroleService" class="com.beifengbpm.service.impl.FlowRoleServiceImpl">
		<property name="commonDao" ref="commonDao"></property>
	</bean>
	<bean id="flowmodelService" class="com.beifengbpm.api.service.impl.FlowModelServiceImpl">
		<property name="commonDao" ref="commonDao"></property>
	</bean>
	<bean id="workitemService" class="com.beifengbpm.api.service.impl.WorkItemServiceImpl">
		<property name="commonDao" ref="commonDao"></property>
	</bean>
	<bean id="processinsService" class="com.beifengbpm.api.service.impl.ProcessInsServiceImpl">
		<property name="commonDao" ref="commonDao"></property>
	</bean>
	<bean id="leaveService" class="com.beifengbpm.business.service.impl.LeaveServiceImpl">
		<property name="commonDao" ref="commonDao"></property>
	</bean>
	<bean id="todotableService" class="com.beifengbpm.api.service.impl.TodoTableServiceImpl">
		<property name="commonDao" ref="commonDao"></property>
	</bean>
	<bean id="approvationService" class="com.beifengbpm.business.service.impl.ApprovationServiceImpl">
		<property name="commonDao" ref="commonDao"></property>
	</bean>
	
	
	
</beans>